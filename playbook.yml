---
- name: Provisioning the needed packages in the deployment server
  # select the remote hosts
  hosts: deploy_servers
  # this module is for storing informations about the hosts in variables that could be used by this playbook
  gather_facts: false
  tasks:
    - name: "Gather remote host packages facts"
      package_facts:
        manager: auto

    - name: "Install latest version of Apache when it is not already installed"
      yum:
        name: httpd
        state: latest
        update_cache: yes
      when: "'httpd' not in ansible_facts.packages"

    - name: "Start the Apache process, if not started"
      service:
        name: httpd
        state: started

    - name: "Install JDK when it is not already installed"
      yum:
        name: java-11-openjdk-devel
        state: latest
        update_cache: yes
      when: "'java-11-openjdk-devel' not in ansible_facts.packages"

    - name: "Install yum-utils package for setting up the docker repository, when docker is not already installed"
      yum:
        name: yum-utils
        state: present
        update_cache: yes
      when: "'docker-ce' not in ansible_facts.packages"

    - name: "Set up the docker repository, when docker is not already installed"
      shell:
        cmd: "yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo"
      when: "'docker-ce' not in ansible_facts.packages"

    - name: "Install Docker Engine, when it is not already installed"
      yum:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present
        update_cache: yes
      when: "'docker-ce' not in ansible_facts.packages"

    - name: "Start Docker, if not started"
      service: 
        name: docker
        state: started

    - name: "Install Postgresql when it is not already installed"
      yum:
        name: postgresql-server
        state: present
        update_cache: yes
      when: "'postgresql' not in ansible_facts.packages"

    - name: "Check if postgresql is already initialized"
      stat:
        path: /var/lib/pgsql/data
      register: st

    - name: "Postgresql - Post Installation"
      shell:
        cmd: "postgresql-setup initdb"
      when: st.stat.exists==False

    - name: "Start, if not stared and Enable Postgresql"
      service:
        name: postgresql  
        state: started
        enabled: yes

